<div class="container justify-content-center align-items-center py-5">
  <div class="container-custom height-half container p-3 align-items-center text-center justify-content-center">
    <h1 class="text-center">Pie Chart for Server Ram usage</h1>
    <div class="pieChart justify-content-center align-items-center" id="canvasLive">
      <canvas id="pie-chart"></canvas>
    </div>
    <h1 class="text-live "></h1>
    <button onclick="updateLiveCount()" class="btn btn-outline-dark">Server Network Speed</button>
  </div>
</div>
<!-- You can find the library code from below link  -->
<script src=" https://cdn.jsdelivr.net/npm/chart.js">
</script>
<!-- end of library link  -->
<script>
  const myArray = [<%= ramArray %>]
  const myChart = new Chart(document.getElementById('pie-chart'), {
    type: 'pie',
    data: {
      labels: ["Used Ram", "Free Ram"],
      datasets: [{
        backgroundColor: ["red", "blue"],
        data: myArray
      }]
    },
    options: {
      title: {
        display: true,
        text: 'Pie Chart for admin panel'
      },
      responsive: true,
      maintainAspectRatio: false,
    }
  });

  const updateChart = () => {
    fetch('/get-updated-data') // Replace '/get-updated-data' with the appropriate server route
      .then(response => response.json())
      .then(data => {
        // Update the chart with the new data
        myChart.data.datasets[0].data = data.data;
        console.log(data.data);
        myChart.update();
      })
      .catch(error => {
        console.log('Error fetching updated data:', error);
      });
  };

  setInterval(updateChart, 3000);
  // Inside your EJS template or a separate JavaScript file
  // document.addEventListener('DOMContentLoaded', () => {
  const speedElement = document.querySelector('.text-live');

  const updateLiveCount = () => {
    fetch('/networkSpeed')
      .then(response => response.json())
      .then(data => {
        speedElement.innerHTML = `Server Network Speed &rarr; <span class="text-live">${data.speed}</span>Mbps`;
      })
      .catch(error => {
        console.log('Error fetching live count:', error);
      });
  };

  //   updateLiveCount();
  //   setInterval(updateLiveCount, 6000);
  // });
</script>